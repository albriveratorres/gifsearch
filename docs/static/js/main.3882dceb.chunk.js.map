{"version":3,"sources":["components/AddCategory.js","helpers/getgifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,uBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,UACI,6BAAMD,IACN,uBACIQ,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,c,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kGACoFC,UAAWH,IAD/F,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAc,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAqBvC,OAfAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGb,CAAEpB,IAGGqB,EDnB0BM,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,eEhB7BiB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,U,MChB9B8B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.3882dceb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    };\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <h1>{ inputValue }</h1>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async( category ) => {\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=bg6Q8rchiM8anaimETKXZ2f1VcMaIPlx&limit=10&q=${encodeURI( category )}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    \n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n    \n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading</p> } \n            <div className=\"card-grid\">\n                <ol>\n                    {\n                        images.map( img => (\n                            <GifGridItem\n                                key={ img.id }\n                                { ...img }\n                            />\n                        ))\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getgifs';\n\n\n\nexport const useFetchGifs = ( category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n \n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setTimeout(() => {\n                    \n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                }, 2000);\n                \n            })\n    },[ category ])\n    \n\n    return state; \n}","import React, { useState }from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n    //const categories = ['one punch', 'samurai x', 'dragon ball']\n\n    const [categories, setCategories] = useState(['one punch'])\n\n    // const handleAdd = () => {\n    //     setCategories( categ => [ ...categ, 'hunterxhunter']);\n    // };\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n            {\n                categories.map(category  =>(\n                    <GifGrid \n                        key={ category }\n                        category={ category }\n                    />\n                ))\n            }\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}